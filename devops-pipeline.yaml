#Pipeline object has 4 properties: name stages triggers and variables
name: $(date:yyyyMMdd)$(rev:.rr) #20190910.00

stages:
  - stage: 'build'
    condition: succeeded() #everything that happened in pipeline before we get here must be successful 
    displayName: 'build-mvc'
    jobs:
      - job:
        condition: succeeded() #must have succeeded up to this pound and 
        displayName: 'build-process'
        pool:  #lets job know how to operate
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
            echo 'build passed...' #commandline

  - stage: 'pack'
    condition: succeeded() #everything that happened in pipeline before we get here must be successful 
      displayName: 'pack-mvc'
      jobs:
        - job:
          condition: succeeded() #must have succeeded up to this pound and 
          displayName: 'pack-process'
          pool:  #lets job know how to operate
            vmImage: 'ubuntu-16.04'
          steps:
            - script: |
              echo 'pack passed...' #commandline

  - stage: 'deploy'
    condition: succeeded() #everything that happened in pipeline before we get here must be successful 
    displayName: 'deploy-mvc'
    jobs:
      - job:
        condition: succeeded() #must have succeeded up to this pound and 
        displayName: 'deploy-process'
        pool:  #lets job know how to operate
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
            echo 'deploy passed...' #commandline

  - stage: 'test'
    condition: succeeded() #everything that happened in pipeline before we get here must be successful 
    displayName: 'test-mvc'
    jobs:
      - job:
        condition: succeeded() #must have succeeded up to this pound and 
        displayName: 'test-process'
        pool:  #lets job know how to operate
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
            echo 'test passed...' #commandline

triggers: #listeners actually since the SCM actually triggers the pipeline - they are filters
  - branches:
      include:
        - master
#this workstoo
#triggers:
# - master
variables:

#job:
#displayName:  are properties
#job:
  #displayName          is an object with a property
#-  job:                collection item with job and property displayName
#   displayName: